[include shell_command.cfg]
[include mainsail.cfg]

# This file contains pin mappings for the Anycubic Kobra Go/Neo
#   with HC32F460.
# Most parameter came from the stock Marlin firmware
# Config credit: xpeng

# See docs/Config_Reference.md for a description of parameters.

#[include fluidd.cfg]
[include gcode.cfg]
#[include adxl345Pico.cfg]
#[include extras.cfg]
#[include mpu6500.cfg]

[stepper_x]
step_pin: PA12
dir_pin: PA11
enable_pin: !PA15
microsteps: 16
rotation_distance: 40
position_endstop: -7
position_min: -7
position_max: 220
homing_speed: 60
endstop_pin: !PH2
homing_retract_dist: 0
homing_positive_dir: false

[stepper_y]
step_pin: PA9
dir_pin: PA8
enable_pin: !PA15
microsteps: 16
rotation_distance: 40
position_endstop: -17
position_min:-17
position_max: 220
homing_speed: 60
endstop_pin: ^!PC13
homing_retract_dist: 0
homing_positive_dir: false


[stepper_z]
step_pin: PC7
dir_pin: !PC6
enable_pin: !PA15
microsteps: 16
rotation_distance: 8
endstop_pin: ^PC14
position_min: -2
position_max: 245
#position_endstop: 0
homing_speed: 5
second_homing_speed:1
homing_retract_dist: 2.3
homing_positive_dir: false


[safe_z_home]
home_xy_position: 0, 0
speed: 65
z_hop: 10  
z_hop_speed: 10

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB15
dir_pin: !PB14
enable_pin: !PA15
microsteps: 16
rotation_distance: 7.938
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PB8
sensor_type: Generic 3950 #seems to give more precise results than the ATC, further test needed tho
#sensor_type: ATC Semitec 104GT-2 #stock sensor doesn't seem to be an original ATC type actually
sensor_pin: PC3
min_temp: 5
min_extrude_temp: 5
max_temp: 260 #Stock is 250
pressure_advance: 0.025 # 0.0396@220°&after input shaper; 0.085@195°&before input shaper
pressure_advance_smooth_time: 0.01 #0.04 default; trying smaller smooth time together with smaller pressure advance

[firmware_retraction]
retract_length: 1.0
retract_speed: 50
unretract_extra_length: 0
unretract_speed: 40

[heater_bed]
heater_pin: PB9
#sensor_type: Generic 3950
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: 0
max_temp: 120

[bed_mesh]
speed: 400
horizontal_move_z: 7
mesh_min: 32, 26
mesh_max: 189, 189
probe_count: 5, 5
relative_reference_index: 13
algorithm: lagrange

[screws_tilt_adjust]
screw1: -6, 24
screw1_name: front left screw
screw2: 157, 24
screw2_name: front right screw
screw3: 157, 188
screw3_name: rear right screw
screw4: -6, 188
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M4 #or CCW? Neither one gave correct instructions for all of the three screws actually, further tests needed.

[probe]
pin: PA1
x_offset: 37.5
y_offset: -4
samples: 6
samples_result: average
samples_tolerance: 0.03
samples_tolerance_retries: 6
sample_retract_dist: 0.5
speed:1
lift_speed:4

[controller_fan controller_fan]
#max_power: 0.75
pin: PB12

[heater_fan extruder_fan]
pin: PB13
#hardware_pwm: True #default: False


[fan]
pin: PB5
#max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   pin may be set to. The value 1.0 allows the pin to be set fully
#   enabled for extended periods, while a value of 0.5 would allow the
#   pin to be enabled for no more than half the time. This setting may
#   be used to limit the total power output (over extended periods) to
#   the fan. If this value is less than 1.0 then fan speed requests
#   will be scaled between zero and max_power (for example, if
#   max_power is .9 and a fan speed of 80% is requested then the fan
#   power will be set to 72%). The default is 1.0.
#shutdown_speed: 0
#   The desired fan speed (expressed as a value from 0.0 to 1.0) if
#   the micro-controller software enters an error state. The default
#   is 0.
cycle_time: 0.000032 #=~31.4kHz (exact: 31.25kHz); 0.130= ~7.7Hz -> creates humming sound around 50-60%; 0.0001=10kHz -> creates high tone sounds; Klipper's default 0.010=100Hz; stock AC fw maybe uses 31.4kHz from FAST_PWM_FAN, even tho it's not activated, but maybe hardcoded as @jojos38 assumes; that would be ~0.00003185
#   The amount of time (in seconds) for each PWM power cycle to the
#   fan. It is recommended this be 10 milliseconds or greater when
#   using software based PWM. The default is 0.010 seconds.
#hardware_pwm: True #False ; Hardware PWM doesn't seem to work, so we can't use it for the high frequencies and have to use software PWM instead
#kick_start_time: 0.100
#   Time (in seconds) to run the fan at full speed when either first
#   enabling or increasing it by more than 50% (helps get the fan
#   spinning). The default is 0.100 seconds.
#off_below: 0.0
#   The minimum input speed which will power the fan (expressed as a
#   value from 0.0 to 1.0). When a speed lower than off_below is
#   requested the fan will instead be turned off. This setting may be
#   used to prevent fan stalls and to ensure kick starts are
#   effective. The default is 0.0.
#   This setting should be recalibrated whenever max_power is adjusted.
#   To calibrate this setting, start with off_below set to 0.0 and the
#   fan spinning. Gradually lower the fan speed to determine the lowest
#   input speed which reliably drives the fan without stalls. Set
#   off_below to the duty cycle corresponding to this value (for
#   example, 12% -> 0.12) or slightly higher.

[output_pin enable_pin]
#This is the pin controls bed, hotend, extruder fan, part fan.
pin: PB6
static_value: 1

#[output_pin beeper]
#pin: PB7

#[output_pin bl_pin]
#pin: PC0

#[output_pin tft_rst]
#pin: PB4

[idle_timeout]
timeout: 600

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 500
# max_accel: 3500
max_accel: 2000
# max_accel_to_decel: 2000
max_z_velocity: 20
max_z_accel: 20

[input_shaper]
shaper_freq_x: 43.6
shaper_freq_y: 58.6
shaper_type: ei
#shaper_freq_x: 31.8
#shaper_freq_y: 45.6
#shaper_type: mvz

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.584
#*# pid_ki = 1.142
#*# pid_kd = 101.983
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 63.239
#*# pid_ki = 0.905
#*# pid_kd = 1105.099
#*#
#*# [stepper_z]
#*# position_endstop = 2.690
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_type_y = mzv
#*#
#*# [probe]
#*# z_offset = 1.481
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.037083, -0.034583, -0.013750, -0.039167, -0.015833
#*# 	0.014167, 0.010833, 0.039583, 0.031250, 0.050000
#*# 	0.030833, -0.030000, -0.002500, 0.000000, 0.040000
#*# 	-0.010417, -0.032083, 0.008750, 0.004583, 0.036667
#*# 	-0.008750, -0.012917, -0.030000, -0.057500, 0.039583
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 32.0
#*# max_x = 189.0
#*# min_y = 26.0
#*# max_y = 189.0
